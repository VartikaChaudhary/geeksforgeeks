#include<stdio.h>
#include<stdlib.h>
 
struct Node
{
    int data;
    Node *left, *right;
};
 
Node* newNode(int data)		// Helper function to allocates a new node
{
    Node* node = new Node;
    node->data = data;
    node->left = node->right = NULL;
    return node;
}
 
int heighAndSize(Node* node, int &size)			// Function to compute height and size of a binary tree
{
    if (node==NULL)
        return 0;
 
    int l = heighAndSize(node->left, size);			    // compute height of each subtree
    int r = heighAndSize(node->right, size);
    size++;			    //increase size by 1
    return (l > r) ? l + 1 : r + 1;			   //return larger of the two
}
 
float density(Node* root)		//function to calculate density of a binary tree
{
    if (root == NULL)
        return 0;
 
    int size = 0; 			// To store size
    int _height = heighAndSize(root, size);		   // Finds height and size
 
    return (float)size/_height;
}
 

int main()
{
    Node* root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
 
    printf("Density of given binary tree is %f", density(root));
 
    return 0;
}
