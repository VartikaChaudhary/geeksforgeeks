import java.util.Queue;
import java.util.LinkedList;
 
class Node {
    int data;
    Node left, right;
    public Node(int item) {
        data = item;
        left = null;
        right = null;
    }
}
 
class BinaryTree {			// Class to print Level Order Traversal
    Node root;
    void printLevelOrder() 		    // Given a binary tree. Print its nodes in level order using array for implementing queue
    {
        Queue queue = new LinkedList();
        queue.add(root);
        while (!queue.isEmpty()) 
        {
             Node tempNode = queue.poll();		           // poll() removes the present head.
            System.out.print(tempNode.data + " ");
            if (tempNode.left != null) {		           //Enqueue left child
                queue.add(tempNode.left);
            }
            if (tempNode.right != null) {		           //Enqueue right child
                queue.add(tempNode.right);
            }
        }
    }
 
    public static void main(String args[]) 
    {
        BinaryTree tree_level = new BinaryTree();		        // creating a binary tree and entering  the nodes
        tree_level.root = new Node(1);
        tree_level.root.left = new Node(2);
        tree_level.root.right = new Node(3);
        tree_level.root.left.left = new Node(4);
        tree_level.root.left.right = new Node(5);
 
        System.out.println("Level order traversal of binary tree is - ");
        tree_level.printLevelOrder();
    }
}